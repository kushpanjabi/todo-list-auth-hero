{"version":3,"sources":["components/dashboard/todolist/InputTodo.js","components/dashboard/todolist/EditTodo.js","components/dashboard/todolist/ListTodos.js","components/dashboard/Dashboard.js","components/Login.js","components/Register.js","components/Landing.js","App.js","index.js"],"names":["InputTodo","setTodosChange","useState","description","setDescription","onSubmitForm","e","a","preventDefault","myHeaders","Headers","append","localStorage","token","body","fetch","method","headers","JSON","stringify","response","json","parseResponse","console","log","error","message","className","onSubmit","type","placeholder","value","onChange","target","EditTodo","todo","updateDescription","todo_id","data-toggle","data-target","id","onClick","data-dismiss","ListTodos","allTodos","todos","setTodos","filter","useEffect","scope","length","map","key","deleteTodo","Dashboard","setAuth","name","setName","setAllTodos","todosChange","parseRes","user_name","getProfile","removeItem","toast","success","logout","Login","email","password","inputs","setInputs","setItem","to","Register","Landing","configure","App","isAuthenticated","setIsAuntheticated","boolean","isAuth","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa47d13.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react';\n\nconst InputTodo = ({ setTodosChange }) => {\n\n    const [description, setDescription] = useState('');\n    \n    const onSubmitForm  = async e => {\n        e.preventDefault();\n        try {\n\n            const myHeaders = new Headers();\n\n            myHeaders.append('Content-Type', 'application/json');\n            myHeaders.append('token', localStorage.token);\n\n            const body = { description };\n            const response = await fetch('http://localhost:5000/dashboard/todos', \n            {\n                method: 'POST',\n                headers: myHeaders,\n                body: JSON.stringify(body)\n            });\n\n            const parseResponse = await response.json();\n\n            console.log(parseResponse);\n\n            setTodosChange(true);\n            setDescription('');\n\n            // window.location = \"/\";\n        } catch (err) {\n            console.error(err.message);\n        }\n\n    }\n    return(\n        <Fragment>\n            <h1 className=\"text-center my-5\">Input Todo</h1>\n            <form className=\"d-flex\" onSubmit={onSubmitForm}>\n                <input \n                type=\"text\" \n                placeholder=\"add todo\" \n                className=\"form-control\" \n                value={description} \n                onChange={e => setDescription(e.target.value)} \n                /> \n                <button className=\"btn btn-success\">Add</button>\n            </form>\n        </Fragment>\n    );\n}\n\nexport default InputTodo;","import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo, setTodosChange }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  //edit description function\n\n  const updateDescription = async e => {\n    e.preventDefault();\n    try {\n      const body = { description };\n\n      const myHeaders = new Headers();\n\n      myHeaders.append('Content-Type', 'application/json');\n      myHeaders.append('token', localStorage.token);\n\n      await fetch(\n        `http://localhost:5000/dashboard/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: myHeaders,\n          body: JSON.stringify(body)\n        }\n      );\n\n      setTodosChange(true);\n      \n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className=\"btn btn-warning\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        Edit\n      </button>\n\n      {/* \n        id = id10\n      */}\n      <div\n        className=\"modal\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h4 className=\"modal-title\">Edit Todo</h4>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                &times;\n              </button>\n            </div>\n\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={e => setDescription(e.target.value)}\n              />\n            </div>\n\n            <div className=\"modal-footer\">\n              <button\n                type=\"button\"\n                className=\"btn btn-warning\"\n                data-dismiss=\"modal\"\n                onClick={e => updateDescription(e)}\n              >\n                Edit\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n                onClick={() => setDescription(todo.description)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;","import React, { Fragment, useState, useEffect } from 'react';\nimport EditTodo from './EditTodo';\n\nconst ListTodos = ({ allTodos, setTodosChange }) => {\n    console.log(allTodos);\n    const [todos, setTodos] = useState([allTodos]); // empty array\n\n    //delete todo function\n\n    async function deleteTodo(id) {\n        try {\n            await fetch (`http://localhost:5000/dashboard/todos/${id}`, {\n                method: 'DELETE',\n                headers: {token: localStorage.token}\n            });\n            setTodos(todos.filter(todo => todo.todo_id !== id));\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    // get todo function\n    \n    // async function getTodos() {\n    //       const res = await fetch('http://localhost:5000/todos');\n\n     //   const todoArray = await res.json();\n\n     //   setTodos(todoArray);\n    // }\n\n    useEffect(() => {\n        setTodos(allTodos)\n    }, [allTodos]);\n\n\n    console.log(todos);\n\n    return (\n    <Fragment>\n        <table className=\"table mt-5\">\n        <thead className=\"thead-light\">\n            <tr>\n            <th scope=\"col\">Description</th>\n            <th scope=\"col\">Edit</th>\n            <th scope=\"col\">Delete</th>\n            </tr>\n        </thead>\n        <tbody>\n         {\n         todos.length !== 0 && todos[0].todo_id !== null && \n            todos.map(todo => (\n             <tr key={todo.todo_id}>\n                 <td>{todo.description}</td>\n                 <td><EditTodo todo={todo} setTodosChange={setTodosChange} /></td>\n                 <td><button \n                 className=\"btn btn-danger\"\n                 onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\n             </tr>\n         ))\n         }\n        </tbody>\n        </table>\n    </Fragment>\n)};\n\n\nexport default ListTodos;","import React, { useState, useEffect } from 'react';\n\nimport { toast } from 'react-toastify';\n\n// components\n\nimport InputTodo from './todolist/InputTodo';\nimport ListTodos from './todolist/ListTodos';\n \nconst Dashboard = ({setAuth}) => {\n\n    const [name, setName] = useState('');\n    const [allTodos, setAllTodos] = useState([]);\n    const [todosChange, setTodosChange] = useState(false);\n\n    async function getProfile() {\n        try {\n            const response = await fetch('http://localhost:5000/dashboard/',{\n                method: 'GET',\n                headers: { token: localStorage.token }\n            });\n\n            const parseRes = await response.json();\n            \n            setAllTodos(parseRes);\n            setName(parseRes[0].user_name);\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    const logout = (e) => {\n        e.preventDefault(); \n        localStorage.removeItem('token');\n        setAuth(false);\n\n        toast.success('Logged out successfully');\n    };\n    \n    useEffect(() => {\n        getProfile();\n        setTodosChange(false);\n    },[todosChange]);\n\n    return (\n        <div>\n            <div className=\"d-flex mt-5 justify-content-around\">\n                <h2>Hello {name}!</h2>\n                <button className=\"btn btn-primary\" onClick={e => logout(e)}>Logout</button>\n            </div>\n            <InputTodo setTodosChange={setTodosChange} />\n            <ListTodos allTodos={allTodos} setTodosChange={setTodosChange} />\n        </div>\n    );\n};\n\nexport default Dashboard;","import React, { Fragment, useState } from 'react';\nimport { Link } from  'react-router-dom';\nimport { toast } from 'react-toastify';\n\n\nconst Login = ({setAuth}) => {\n\n    const [inputs, setInputs] = useState({\n        email: '',\n        password: '',\n    });\n\n    const {email, password} = inputs;\n\n    const onChange = (e) => {\n        setInputs({...inputs, [e.target.name]: e.target.value});\n    };\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n\n        try {\n            const body = {email, password}\n\n            const response = await fetch ('http://localhost:5000/auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(body)\n            });\n\n            const parseRes = await response.json();\n\n            if(parseRes.token) {\n                localStorage.setItem('token', parseRes.token);\n\n                setAuth(true);\n                toast.success('Logged in!')\n            } else {\n                setAuth(false);\n                toast.error(parseRes); \n            }\n\n\n\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return (\n        <Fragment>\n            <h1 className=\"text-center my-5\">Login</h1>\n            <form onSubmit={onSubmitForm}>\n                <input type=\"email\" name=\"email\" placeholder=\"email\" className=\"form-control my-3\" value={email} onChange={e => onChange(e)} />\n                <input type=\"password\" name=\"password\" placeholder=\"password\" className=\"form-control my-3\" value={password} onChange={e => onChange(e)} />\n                <button className=\"btn btn-success btn-block\">Submit</button>\n            </form>\n            <Link to=\"/register\">Register</Link>\n        </Fragment>\n    );\n};\n\nexport default Login;","import React, { Fragment, useState } from 'react';\nimport { Link } from  'react-router-dom';\nimport { toast } from 'react-toastify';\n\n\nconst Register = ({ setAuth }) => {\n    const [inputs, setInputs] = useState({\n      email: \"\",\n      password: \"\",\n      name: \"\"\n    });\n  \n    const { email, password, name } = inputs;\n  \n    const onChange = e =>\n      setInputs({ ...inputs, [e.target.name]: e.target.value });\n  \n    const onSubmitForm = async e => {\n      e.preventDefault();\n      try {\n        const body = { email, password, name };\n        const response = await fetch(\n          \"http://localhost:5000/auth/register\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }\n        );\n        \n        const parseRes = await response.json();\n\n        if (parseRes.token){\n            localStorage.setItem('token', parseRes.token);\n        \n            setAuth(true);\n            toast.success('Registered successfully')  \n            } else {\n                setAuth(false);\n                toast.error(parseRes);\n            }\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    return (\n        <Fragment>\n            <h1 className=\"text-center my-5\">Register</h1>\n            <form onSubmit={onSubmitForm}>\n                <input type=\"email\" name=\"email\" placeholder=\"email\" className=\"form-control my-3\" value={email} onChange={e => onChange(e)} />\n                <input type=\"password\" name=\"password\" placeholder=\"password\" className=\"form-control my-3\" value={password} onChange={e => onChange(e)} />\n                <input type=\"text\" name=\"name\" placeholder=\"name\" className=\"form-control my-3\" value={name} onChange={e => onChange(e)} />\n                <button className=\"btn btn-success btn-block\">Sign up</button>\n            </form>\n            <Link to=\"/login\">Login</Link>\n\n        </Fragment>\n    );\n};\n\nexport default Register;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n    return (\n        <div className=\"jumbotron mt-5\">\n            <h1>Welcome to Todo City.</h1>\n            <p>Sign In and start building your todolist</p>\n            <Link to='/login' className=\"btn btn-primary\">Login</Link>\n            <Link to='/register' className=\"btn btn-primary ml-3\">Sign up</Link>\n        </div>\n    );\n};\n\nexport default Landing;","import React, { Fragment, useState, useEffect } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// components\nimport Dashboard from './components/dashboard/Dashboard';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Landing from './components/Landing';\n\ntoast.configure()\n\n\nfunction App() {\n  const [isAuthenticated, setIsAuntheticated] = useState(false);\n\n  const setAuth = (boolean) => {\n    setIsAuntheticated(boolean);\n  };\n\n  async function isAuth() {\n    try {\n      const response = await fetch ('http://localhost:5000/auth/is-verify',{\n        method: 'GET',\n        headers: {token: localStorage.token}\n      });\n\n      const parseRes = await response.json()\n      \n      parseRes === true ? setIsAuntheticated(true) : setIsAuntheticated(false);\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    isAuth()\n  },[]);\n\n  return (\n    <Fragment>\n      <Router>\n        <div className=\"container\">\n          <Switch>\n            <Route exact path= '/' render={props => !isAuthenticated ? (<Landing {...props} />) : (<Redirect to='/dashboard' />)} />\n            <Route exact path= '/login' render={props => !isAuthenticated ? (<Login {...props} setAuth={setAuth} />) : (<Redirect to='/dashboard' />)} />\n            <Route exact path= '/register' render={props => !isAuthenticated ? (<Register {...props} setAuth={setAuth} />) : (<Redirect to='/login' />)} />\n            <Route exact path= '/dashboard' render={props => isAuthenticated ? (<Dashboard {...props} setAuth={setAuth} />) : (<Redirect to ='/login' />)} />\n          </Switch>\n        </div>\n      </Router> \n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}